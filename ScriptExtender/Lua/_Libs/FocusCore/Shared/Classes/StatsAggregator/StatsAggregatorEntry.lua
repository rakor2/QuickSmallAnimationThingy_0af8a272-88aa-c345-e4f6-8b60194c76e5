---@class StatsAggregatorEntry: MetaClass
---@field Name {Value:string, Mod:string}
---@field Type {Value:string, Mod:string}
---@field Using {Value:string, Mod:string}|nil
---@field Data {DataType:string, Value:string, Mod:string, Priority:integer}[]
---@field DataPriority table<string, string[]>
StatsAggregatorEntry = _Class:Create("StatsAggregatorEntry")
StatsAggregatorEntry.DataPriority = {}
StatsAggregatorEntry.DataPriority.Armor = {
    "RootTemplate",
    "ItemGroup",
    "Level",
    "Slot",
    "Requirements",
    "UseConditions",
    "UseCosts",
    "ArmorClass",
    "Durability",
    "DurabilityDegradeSpeed",
    "ValueLevel",
    "ValueUUID",
    "ValueScale",
    "ValueRounding",
    "ValueOverride",
    "Rarity",
    "Weight",
    "GameSize",
    "SoundSize",
    "Spells",
    "Tags",
    "ExtraProperties",
    "Flags",
    "DefaultBoosts",
    "PersonalStatusImmunities",
    "Boosts",
    "PassivesOnEquip",
    "StatusOnEquip",
    "ComboCategory",
    "InventoryTab",
    "ArmorType",
    "ItemColor",
    "NeedsIdentification",
    "Charges",
    "MaxCharges",
    "ObjectCategory",
    "MinAmount",
    "MaxAmount",
    "Priority",
    "Unique",
    "MinLevel",
    "MaxLevel",
    "Shield",
    "Armor Class Ability",
    "Ability Modifier Cap",
    "FallingHitEffect",
    "FallingLandEffect",
    "ColorPresetResource",
    "Proficiency Group",
    "InstrumentType",
    "StatusInInventory",
}
StatsAggregatorEntry.DataPriority.Character = {
    "Level",
    "Strength",
    "Dexterity",
    "Constitution",
    "Intelligence",
    "Wisdom",
    "Charisma",
    "Armor",
    "Vitality",
    "XPReward",
    "Sight",
    "Hearing",
    "FOV",
    "VerticalFOV",
    "Weight",
    "GameSize",
    "SoundSize",
    "StepsType",
    "ExtraProperties",
    "Flags",
    "DefaultBoosts",
    "PersonalStatusImmunities",
    "PathInfluence",
    "Progression Type",
    "ProficiencyBonusScaling",
    "ProficiencyBonus",
    "SpellCastingAbility",
    "UnarmedAttackAbility",
    "UnarmedRangedAttackAbility",
    "ActionResources",
    "Class",
    "Passives",
    "BludgeoningResistance",
    "SlashingResistance",
    "PiercingResistance",
    "AcidResistance",
    "ColdResistance",
    "FireResistance",
    "ForceResistance",
    "LightningResistance",
    "NecroticResistance",
    "PoisonResistance",
    "PsychicResistance",
    "RadiantResistance",
    "ThunderResistance",
    "Initiative",
    "Progressions",
    "MinimumDetectionRange",
    "DarkvisionRange",
    "FallingHitEffect",
    "FallingLandEffect",
    "ArmorType",
    "Proficiency Group",
    "DynamicAnimationTag",
    "DifficultyStatuses",
}
StatsAggregatorEntry.DataPriority.CriticalHitTypeData = {
    "AcidFX",
    "BludgeoningFX",
    "ColdFX",
    "FireFX",
    "ForceFX",
    "LightningFX",
    "NecroticFX",
    "PiercingFX",
    "PoisonFX",
    "PsychicFX",
    "RadiantFX",
    "SlashingFX",
    "ThunderFX",
}
StatsAggregatorEntry.DataPriority.InterruptData = {
    "DisplayName",
    "DisplayNameTranslated",
    "DisplayNameRef",
    "Description",
    "DescriptionTranslated",
    "DescriptionRef",
    "DescriptionParams",
    "ExtraDescription",
    "ExtraDescriptionTranslated",
    "ExtraDescriptionRef",
    "ExtraDescriptionParams",
    "LoreDescription",
    "LoreDescriptionTranslated",
    "LoreDescriptionRef",
    "Icon",
    "InterruptContext",
    "InterruptContextScope",
    "Container",
    "Conditions",
    "Properties",
    "Roll",
    "Success",
    "Failure",
    "Cost",
    "Stack",
    "Cooldown",
    "InterruptDefaultValue",
    "EnableCondition",
    "EnableContext",
    "TooltipDamageList",
    "TooltipAttackSave",
    "TooltipStatusApply",
    "ShortDescription",
    "ShortDescriptionTranslated",
    "ShortDescriptionRef",
    "ShortDescriptionParams",
    "TooltipOnMiss",
    "TooltipOnSave",
    "TooltipPermanentWarnings",
}
StatsAggregatorEntry.DataPriority.Object = {
    "RootTemplate",
    "Level",
    "ValueLevel",
    "ValueUUID",
    "ValueScale",
    "ValueRounding",
    "ValueOverride",
    "Rarity",
    "Weight",
    "GameSize",
    "SoundSize",
    "ComboCategory",
    "Requirements",
    "Vitality",
    "Armor",
    "Flags",
    "DefaultBoosts",
    "PersonalStatusImmunities",
    "InventoryTab",
    "AddToBottomBar",
    "IgnoredByAI",
    "ObjectCategory",
    "MinAmount",
    "MaxAmount",
    "Priority",
    "Unique",
    "MinLevel",
    "MaxLevel",
    "UseCosts",
    "ItemUseType",
    "BludgeoningResistance",
    "SlashingResistance",
    "PiercingResistance",
    "AcidResistance",
    "ColdResistance",
    "FireResistance",
    "ForceResistance",
    "LightningResistance",
    "NecroticResistance",
    "PoisonResistance",
    "PsychicResistance",
    "RadiantResistance",
    "ThunderResistance",
    "UseConditions",
    "FallingHitEffect",
    "FallingLandEffect",
    "SupplyValue",
    "Sight",
    "FOV",
    "VerticalFOV",
    "DarkvisionRange",
    "MinimumDetectionRange",
    "PassivesOnEquip",
    "StatusInInventory",
}
StatsAggregatorEntry.DataPriority.PassiveData = {
    "DisplayName",
    "DisplayNameTranslated",
    "DisplayNameRef",
    "Description",
    "DescriptionTranslated",
    "DescriptionRef",
    "DescriptionParams",
    "ExtraDescription",
    "ExtraDescriptionTranslated",
    "ExtraDescriptionRef",
    "ExtraDescriptionParams",
    "LoreDescription",
    "LoreDescriptionTranslated",
    "LoreDescriptionRef",
    "TooltipUseCosts",
    "TooltipSave",
    "TooltipConditionalDamage",
    "TooltipPermanentWarnings",
    "Icon",
    "PriorityOrder",
    "EnabledConditions",
    "EnabledContext",
    "Properties",
    "BoostContext",
    "BoostConditions",
    "Boosts",
    "StatsFunctorContext",
    "Conditions",
    "StatsFunctors",
    "ToggleOnFunctors",
    "ToggleOffFunctors",
    "ToggleOnEffect",
    "ToggleOffEffect",
    "ToggleOffContext",
    "ToggleGroup",
    "DynamicAnimationTag",
}
StatsAggregatorEntry.DataPriority.SpellData = {
    "SpellType",
    "Level",
    "SpellSchool",
    "SpellContainerID",
    "Requirement",
    "ContainerSpells",
    "ConcentrationSpellID",
    "Cooldown",
    "Damage",
    "AIFlags",
    "Damage Range",
    "SpellProperties",
    "TargetCeiling",
    "SurfaceType",
    "TargetFloor",
    "SurfaceLifetime",
    "TargetRadius",
    "SurfaceGrowStep",
    "ThrowOrigin",
    "AreaRadius",
    "SurfaceGrowInterval",
    "AddRangeFromAbility",
    "DeathType",
    "StrikeCount",
    "MaxDistance",
    "Acceleration",
    "ExplodeRadius",
    "TeleportDelay",
    "AmountOfTargets",
    "MaxAttacks",
    "MovementSpeed",
    "SpellRoll",
    "NextAttackChance",
    "SpellSuccess",
    "NextAttackChanceDivider",
    "ThrowableSpellProperties",
    "SpellFail",
    "EndPosRadius",
    "OverrideSpellLevel",
    "ThrowableSpellRoll",
    "TargetConditions",
    "TargetProjectiles",
    "JumpDelay",
    "ThrowableSpellSuccess",
    "ProjectileCount",
    "HitRadius",
    "OriginSpellProperties",
    "ThrowableSpellFail",
    "ProjectileDelay",
    "AoEConditions",
    "MemorizationRequirements",
    "Lifetime",
    "OriginSpellRoll",
    "ThrowableTargetConditions",
    "CastTargetHitDelay",
    "MinHitsPerTurn",
    "OriginSpellSuccess",
    "Angle",
    "Height",
    "MaxHitsPerTurn",
    "OriginSpellFail",
    "Trajectories",
    "SingleSource",
    "HitDelay",
    "OriginTargetConditions",
    "Icon",
    "ForceTarget",
    "TeleportSelf",
    "DisplayName",
    "DisplayNameTranslated",
    "DisplayNameRef",
    "Template",
    "UseWeaponDamage",
    "TeleportSurface",
    "Description",
    "DescriptionTranslated",
    "DescriptionRef",
    "UseWeaponProperties",
    "DescriptionParams",
    "ExtraDescription",
    "ExtraDescriptionTranslated",
    "ExtraDescriptionRef",
    "ExtraDescriptionParams",
    "ShortDescription",
    "ShortDescriptionTranslated",
    "ShortDescriptionRef",
    "ShortDescriptionParams",
    "TooltipDamageList",
    "TooltipAttackSave",
    "TooltipStatusApply",
    "TooltipOnMiss",
    "PrepareEffectBone",
    "TooltipOnSave",
    "TooltipUpcastDescription",
    "TooltipUpcastDescriptionTranslated",
    "StormEffect",
    "TooltipUpcastDescriptionParams",
    "FXScale",
    "TooltipPermanentWarnings",
    "MaleImpactEffects",
    "PrepareSound",
    "FemaleImpactEffects",
    "Spellbook",
    "SpawnEffect",
    "PrepareLoopSound",
    "ReappearEffectTextEvent",
    "CastSound",
    "TargetSound",
    "Memory Cost",
    "ProjectileSpells",
    "VocalComponentSound",
    "Distribution",
    "Magic Cost",
    "PreviewCursor",
    "Shuffle",
    "CastEffectTextEvent",
    "Stealth",
    "CastTextEvent",
    "PreviewStrikeHits",
    "Shape",
    "AlternativeCastTextEvents",
    "FrontOffset",
    "InstrumentComponentPrepareSound",
    "InstrumentComponentLoopingSound",
    "InstrumentComponentCastSound",
    "Range",
    "InstrumentComponentImpactSound",
    "Base",
    "ProjectileTerrainOffset",
    "WeaponBones",
    "MovingObjectSummonTemplate",
    "Autocast",
    "ProjectileType",
    "AiCalculationSpellOverride",
    "SurfaceRadius",
    "ItemWall",
    "CycleConditions",
    "ItemWallStatus",
    "UseCosts",
    "WallStartEffect",
    "DualWieldingUseCosts",
    "WallEndEffect",
    "HitCosts",
    "RitualCosts",
    "SpellAnimation",
    "DualWieldingSpellAnimation",
    "VerbalIntent",
    "SpellStyleGroup",
    "WeaponTypes",
    "SpellFlags",
    "SpellActionType",
    "SpellCategory",
    "HitAnimationType",
    "SpellAnimationIntentType",
    "MaximumTotalTargetHP",
    "SpellJumpType",
    "SpellAnimationType",
    "MinJumpDistance",
    "RechargeValues",
    "Requirements",
    "ForkChance",
    "MaxForkCount",
    "ForkLevels",
    "ForkingConditions",
    "MemoryCost",
    "LineOfSightFlags",
    "RootSpellID",
    "PowerLevel",
    "SourceLimbIndex",
    "RequirementConditions",
    "RequirementEvents",
    "PrepareEffect",
    "CastEffect",
    "TargetEffect",
    "PreviewEffect",
    "HitEffect",
    "StopAtFirstContact",
    "TargetHitEffect",
    "HitExtension",
    "TargetGroundEffect",
    "OnlyHit1Target",
    "PositionEffect",
    "BeamEffect",
    "SpellEffect",
    "IgnoreTeleport",
    "SelectedCharacterEffect",
    "SelectedObjectEffect",
    "CinematicArenaFlags",
    "SelectedPositionEffect",
    "DisappearEffect",
    "ReappearEffect",
    "ImpactEffect",
    "DamageType",
    "CinematicArenaTimelineOverride",
    "DelayTurnsCount",
    "DelayRollTarget",
    "DelayRollDie",
    "SpellSoundMagnitude",
    "SpellSoundAftermathTrajectory",
    "MaximumTargets",
    "HighlightConditions",
    "Sheathing",
    "SteerSpeedMultipler",
    "InterruptPrototype",
    "CombatAIOverrideSpell",
}
StatsAggregatorEntry.DataPriority.StatusData = {
    "StatusType",
    "DisplayName",
    "DisplayNameTranslated",
    "DisplayNameRef",
    "Description",
    "DescriptionTranslated",
    "DescriptionRef",
    "DescriptionParams",
    "Icon",
    "FormatColor",
    "StatusEffectOverrideForItems",
    "StatusEffectOverride",
    "MaterialType",
    "Material",
    "MaterialApplyBody",
    "MaterialApplyArmor",
    "MaterialApplyWeapon",
    "PlayerSameParty",
    "MaterialApplyNormalMap",
    "PlayerHasTag",
    "MaterialFadeAmount",
    "PeaceOnly",
    "MaterialOverlayOffset",
    "MaterialParameters",
    "AnimationStart",
    "MeshEffect",
    "AnimationLoop",
    "StillAnimationType",
    "AnimationEnd",
    "StillAnimationPriority",
    "HitAnimationType",
    "UseLyingPickingState",
    "SoundVocalStart",
    "StatsId",
    "SoundVocalLoop",
    "SoundStart",
    "SoundLoop",
    "SoundStop",
    "SoundVocalEnd",
    "StatusSoundState",
    "ImmuneFlag",
    "HealMultiplier",
    "OnApplyConditions",
    "StackId",
    "HealStat",
    "PolymorphResult",
    "StackPriority",
    "HealType",
    "DisableInteractions",
    "Instant",
    "Projectile",
    "StackType",
    "HealValue",
    "AiCalculationSpellOverride",
    "Radius",
    "AuraRadius",
    "AbsorbSurfaceType",
    "FreezeTime",
    "Charges",
    "AuraStatuses",
    "AbsorbSurfaceRange",
    "RetainSpells",
    "DefendTargetPosition",
    "AuraFlags",
    "BonusFromSkill",
    "TargetConditions",
    "AuraFX",
    "HealEffectId",
    "SurfaceChange",
    "Necromantic",
    "Spells",
    "Items",
    "WeaponOverride",
    "ResetCooldowns",
    "LeaveAction",
    "DieAction",
    "ForceStackOverwrite",
    "Toggle",
    "TickType",
    "Boosts",
    "Passives",
    "RemoveConditions",
    "RemoveEvents",
    "TooltipSave",
    "StableRoll",
    "TooltipDamage",
    "StableRollDC",
    "TickFunctors",
    "TemplateID",
    "NumStableSuccess",
    "StatusPropertyFlags",
    "Rules",
    "NumStableFailed",
    "OnApplyFunctors",
    "OnSuccess",
    "OnRemoveFunctors",
    "OnRollsFailed",
    "OnApplyRoll",
    "OnApplySuccess",
    "OnApplyFail",
    "OnTickRoll",
    "OnTickSuccess",
    "OnTickFail",
    "OnRemoveRoll",
    "OnRemoveSuccess",
    "OnRemoveFail",
    "LEDEffect",
    "StatusGroups",
    "IsUnique",
    "ApplyEffect",
    "HideOverheadUI",
    "StatusEffect",
    "StatusEffectOnTurn",
    "TargetEffect",
    "BeamEffect",
    "SplatterDirtAmount",
    "SplatterBloodAmount",
    "SplatterSweatAmount",
    "ManagedStatusEffectType",
    "ManagedStatusEffectGroup",
    "EndEffect",
    "TooltipPermanentWarnings",
    "PerformEventName",
    "DynamicAnimationTag",
    "Sheathing",
}
StatsAggregatorEntry.DataPriority.Weapon = {
    "RootTemplate",
    "ItemGroup",
    "Level",
    "Requirements",
    "UseConditions",
    "UseCosts",
    "Damage Type",
    "Damage",
    "Damage Range",
    "WeaponRange",
    "Durability",
    "DurabilityDegradeSpeed",
    "ValueLevel",
    "ValueUUID",
    "ValueScale",
    "ValueRounding",
    "ValueOverride",
    "Rarity",
    "Weight",
    "GameSize",
    "SoundSize",
    "Slot",
    "Projectile",
    "IgnoreVisionBlock",
    "ComboCategory",
    "Spells",
    "Tags",
    "ExtraProperties",
    "WeaponFunctors",
    "Flags",
    "DefaultBoosts",
    "PersonalStatusImmunities",
    "Boosts",
    "BoostsOnEquipMainHand",
    "BoostsOnEquipOffHand",
    "PassivesOnEquip",
    "PassivesMainHand",
    "PassivesOffHand",
    "StatusOnEquip",
    "InventoryTab",
    "NeedsIdentification",
    "Charges",
    "MaxCharges",
    "ItemColor",
    "ObjectCategory",
    "MinAmount",
    "MaxAmount",
    "Priority",
    "Unique",
    "MinLevel",
    "MaxLevel",
    "Weapon Group",
    "VersatileDamage",
    "Weapon Properties",
    "FallingHitEffect",
    "FallingLandEffect",
    "ColorPresetResource",
    "Proficiency Group",
    "SupplyValue",
    "UniqueWeaponSoundSwitch",
    "StatusInInventory",
}

---@param o? any
---@return StatsAggregatorEntry
function StatsAggregatorEntry:New(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    o.Data = {}
    return o
end

function StatsAggregatorEntry:SortDataAlphabetical()
    table.sort(self.Data, function(a,b) return a.DataType < b.DataType end)
end

function StatsAggregatorEntry:SortDataLarian()
    table.sort(self.Data, function(a,b) return a.Priority < b.Priority end)
end

---@param name string
---@param mod string
function StatsAggregatorEntry:SetName(name, mod)
    self.Name = {Value = name, Mod = mod}
end

---@param type string
---@param mod string
function StatsAggregatorEntry:SetType(type, mod)
    self.Type = {Value = type, Mod = mod}
end

---@param using string
---@param mod string
function StatsAggregatorEntry:SetUsing(using, mod)
    self.Using = {Value = using, Mod = mod}
end

function StatsAggregatorEntry:GetPriority(property)
    if self.Type ~= nil then
        for i, prop in pairs(self.DataPriority[self.Type.Value]) do
            if prop == property then
                return i
            end
        end
    end
    return 0
end

---@param dataType string
---@param dataValue string
---@param mod string
function StatsAggregatorEntry:AddData(dataType, dataValue, mod)
    table.insert(self.Data, {DataType = dataType, Value = dataValue, Mod = mod, Priority = self:GetPriority(dataType)})
end

---@param dataType string
---@return {DataType:string, Value:string, Mod:string}|nil
function StatsAggregatorEntry:GetData(dataType)
    for i, data in ipairs(self.Data) do
        if data.DataType == dataType then
            return self.Data[i]
        end
    end
end

--Updates the value and mod of a single dataType entry with a new datavalue and mod
---@param dataType string
---@param dataValue string
---@param mod string
function StatsAggregatorEntry:UpdateData(dataType, dataValue, mod)
    for i, data in ipairs(self.Data) do
        if data.DataType == dataType then
            self.Data[i].Value = dataValue
            self.Data[i].Mod = mod
            break
        end
    end
end

--Updates current data values with entry's data values and adds new data types from entry.
---@param entry StatsAggregatorEntry
function StatsAggregatorEntry:IntegrateData(entry)
    for i, data in ipairs(entry.Data) do
        local currentData = self:GetData(data.DataType)
        if currentData == nil then
            self:AddData(data.DataType, data.Value, data.Mod)
        elseif currentData.Value ~= data.Value then
            self:UpdateData(data.DataType, data.Value, data.Mod)
        end
    end
end

--Replaces current data with new data from entry, preserving old data if no change was made. Does not preserve missing datatypes from current data -> new data
---@param entry StatsAggregatorEntry
function StatsAggregatorEntry:OverwriteData(entry)
    local newData = StatsAggregatorEntry:New()
    for _, data in ipairs(entry.Data) do
        newData:AddData(data.DataType, data.Value, data.Mod)
    end

    for _, data in ipairs(self.Data) do
        if newData:GetData(data.DataType) == nil then
            newData:AddData(data.DataType, data.Value, data.Mod)
        end
    end

    self.Data = newData.Data
end

--Inherits non-nil data values from an entry
---@param entry StatsAggregatorEntry
function StatsAggregatorEntry:InheritData(entry)
    for i, data in ipairs(entry.Data) do
        local myData = self:GetData(data.DataType)
        if myData == nil then
            self:AddData(data.DataType, data.Value, data.Mod)
        end
    end
end